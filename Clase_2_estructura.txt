Estructura de Langchain

- Se tiene disponible en pyhton y en JavaScript


Claves:

1. Conexión con modelos
2. Conexión con datos
3. Encadenamiento de procesos


Fundamentos:

Cadena de Langchain

Datos -> Modelo de embedding -> Base de datos vectorial -> Prompt -> Pregunta humano -> LLM modelos -> Respuesta 

Flujo para generar una respuesta con LangChain

- Primero comenzamos con datos
- Luego se convierten en numero con embebbing
- Luego se guardan en una base de datos vectorial
- A partir del guardado se crea un prompt para empezar a hacer preguntas
- La pregunta al humano se combina con el promp y lo recibe un modelo de LLM (Large Lenguaje Model)
- Esto ultimo es la que genera la respuesta.

Ejemplo del procesmiento de datos:

Datos -> Limpieza de datos -> Generación de resumen -> Selección de metadata -> Fragmentar el texto -> Modelo de embedding -> Selección de base de datos vectorial

Ejemplo de uso de LLM

             Información de base vectorial -> Prompt -> LLM

                         Diseño de memoria -> Prompt -> LLM

            Petición al LLM por el humano -> Prompt -> LLM


Se puede incrermentar el contexto con una memoria
Se filtrar la información de acuerdo a la metadata

https://github.com/langchain-ai/langchain

https://python.langchain.com/docs/integrations/providers/


Integraciones que existen:

Tipos de document loaders

https://python.langchain.com/docs/integrations/document_loaders/


Tipo de Vector stores

https://python.langchain.com/docs/integrations/vectorstores/

Tipo de Embedding models

https://python.langchain.com/docs/integrations/text_embedding/


Tipo de Chat models 

https://python.langchain.com/docs/integrations/chat/

Tipo de retrievers

https://python.langchain.com/docs/integrations/retrievers/